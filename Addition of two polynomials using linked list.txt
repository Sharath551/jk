/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>

struct node{
    float coefficient;
    int exponential;
    struct node *link;
};

struct node* insert(struct node *head,float coeff,int expo){
    struct node *temp;
    struct node *newp = (struct node *)malloc(sizeof(struct node));
    newp->coefficient = coeff;
    newp->exponential = expo;
    newp->link = NULL;
    
    if(head==NULL || expo>head->exponential){
        newp->link = head;
        head = newp;
    }
    else{
        temp = head;
        while(temp->link != NULL && temp->link->exponential > expo ){
            temp = temp->link;
        }
        newp->link = temp->link;
        temp->link = newp;
    }
    return head;
}

struct node* create(struct node *head){
    int n;
    int expo;
    float coeff;
    
    printf("Enter the number of terms : ");
    scanf("%d",&n);
    
    for(int i=0;i<n;i++){
        
        printf("Enter the coefficient for term %d : ",i+1);
        scanf("%f",&coeff);
        
        printf("Enter the exponential for term %d : ",i+1);
        scanf("%d",&expo);
        head = insert(head,coeff,expo);
    }
    return head;
}

void print(struct node *head){
    if(head==NULL) printf("No polynomial");
    else{
        struct node *temp = head;
        while(temp!=NULL){
            printf("(%.1fx^%d)",temp->coefficient,temp->exponential);
            temp = temp->link;
            if(temp!=NULL) printf(" + ");
            else printf("\n");
        }
    }
}

void polyadd(struct node *head1, struct node *head2){
    struct node *ptr1 = head1;
    struct node *ptr2 = head2;
    struct node *head3 = NULL;
    
    while(ptr1!=NULL && ptr2!=NULL){
        if(ptr1->exponential==ptr2->exponential){
           head3 = insert(head3,ptr1->coefficient+ptr2->coefficient,ptr1->exponential); 
           ptr1 = ptr1->link;
           ptr2 = ptr2->link;
        }
        else if(ptr1->exponential>ptr2->exponential){
            head3 = insert(head3,ptr1->coefficient,ptr1->exponential);
            ptr1 = ptr1->link;
        }
        else if(ptr1->exponential<ptr2->exponential){
            head3 = insert(head3,ptr2->coefficient,ptr2->exponential);
            ptr2 = ptr2->link;
        }
    }
    while(ptr1!=NULL){
        head3 = insert(head3,ptr1->coefficient,ptr1->exponential);
        ptr1 = ptr1->link;
    }
    while(ptr2!=NULL){
        head3 = insert(head3,ptr2->coefficient,ptr2->exponential);
        ptr2 = ptr2->link;
    }
    printf("The added Polynomial is : ");
    print(head3);
}

int main()
{
    struct node *head1 = NULL;
    struct node *head2 = NULL;
    printf("Enter the first Polynomial\n ");
    head1 = create(head1);
    printf("Enter the second Polynomial\n ");
    head2 = create(head2);
    
    polyadd(head1,head2);
    
    return 0;
}
